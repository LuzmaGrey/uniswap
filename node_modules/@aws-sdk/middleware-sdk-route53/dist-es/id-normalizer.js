import { __assign, __awaiter, __generator, __values } from "tslib";
import { IDENTIFIER_PREFIX_PATTERN } from "./constants";
var IDENTIFIER_PARAMETERS = ["DelegationSetId", "HostedZoneId", "Id"];
export function idNormalizerMiddleware() {
    var _this = this;
    return function (next) {
        return function (args) { return __awaiter(_this, void 0, void 0, function () {
            var input, IDENTIFIER_PARAMETERS_1, IDENTIFIER_PARAMETERS_1_1, paramName, param;
            var e_1, _a;
            return __generator(this, function (_b) {
                input = __assign({}, args.input);
                try {
                    for (IDENTIFIER_PARAMETERS_1 = __values(IDENTIFIER_PARAMETERS), IDENTIFIER_PARAMETERS_1_1 = IDENTIFIER_PARAMETERS_1.next(); !IDENTIFIER_PARAMETERS_1_1.done; IDENTIFIER_PARAMETERS_1_1 = IDENTIFIER_PARAMETERS_1.next()) {
                        paramName = IDENTIFIER_PARAMETERS_1_1.value;
                        param = input[paramName];
                        if (param) {
                            input[paramName] = param.replace(IDENTIFIER_PREFIX_PATTERN, "");
                        }
                    }
                }
                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                finally {
                    try {
                        if (IDENTIFIER_PARAMETERS_1_1 && !IDENTIFIER_PARAMETERS_1_1.done && (_a = IDENTIFIER_PARAMETERS_1.return)) _a.call(IDENTIFIER_PARAMETERS_1);
                    }
                    finally { if (e_1) throw e_1.error; }
                }
                return [2, next(__assign(__assign({}, args), { input: input }))];
            });
        }); };
    };
}
export var idNormalizerMiddlewareOptions = {
    step: "initialize",
    tags: ["ROUTE53_IDS"],
    name: "idNormalizerMiddleware",
    override: true,
};
export var getIdNormalizerPlugin = function (unused) { return ({
    applyToStack: function (clientStack) {
        clientStack.add(idNormalizerMiddleware(), idNormalizerMiddlewareOptions);
    },
}); };
